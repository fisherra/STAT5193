roster_sort[,-1:2]
roster_sort[,-2]
roster_sort[,c(-1,-2)]
full_name <- paste(roster_sort$Firstname, roster_sort$Lastname)
full_name
row.names(roster_sort) <- full_name
roster_sort
roster_sort_drop <- roster_sort[,c(-1,-2)]
roster_sort_drop
full_name <- paste(roster_sort$Firstname, roster_sort$Lastname)
row.names(roster_sort) <- full_name
roster_sort_drop <- roster_sort[,c(-1,-2)]
roster_sort_drop
ts.plot()
?t()
?rt
rt(1000, 10)
hist(rt(1000, 10))
?hist
?hist
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Y",
xlab = "X")
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value")
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value")
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
plot(dt(1,10))
plot(dt(1000,10))
hist(dt(1000,10))
hist(rt(1000,10))
rnorm(100)
hist(rnorm(100))
t_plot <- hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
t_plot
t_plot <- hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
t_plot
lines(dnorm())
lines(dnorm(1))
dnorm(1)
dnorm(1000)
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dnorm(x, mean(y), sd(y)), add=TRUE, col="darkblue", lwd=2)
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
xseq<-seq(-4,4,.01)
y<-2*xseq + rnorm(length(xseq),0,5.5)
curve(dnorm(x, mean(y), sd(y)), add=TRUE, col="darkblue", lwd=2)
?curves
?curve
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
x=seq(-4,4,length=200)
y=1/sqrt(2*pi)*exp(-x^2/2)
plot(x,y,type="l",lwd=2,col="red")
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
x=seq(-4,4,length=200)
y=1/sqrt(2*pi)*exp(-x^2/2)
lines(x,y,type="l",lwd=2,col="red")
curve(dnorm(x), xlim = c(-.1,1.1), lwd =3, ylab = "",
main="Uniform distribution")
curve(dnorm(x), xlim = c(-4,4), lwd =3, ylab = "",
main="Uniform distribution")
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dnorm(x), xlim = c(-4,4), lwd =3, ylab = "",
main="Uniform distribution")
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
lines(curve(dnorm(x), xlim = c(-4,4), lwd =3, ylab = "",
main="Uniform distribution"))
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
lines(curve(dnorm(x), xlim = c(-4,4), lwd =3))
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dnorm(x), xlim = c(-4,4), lwd =3)
curve(dt(x, df = 10), main = "Students T denisty with 10 df",
xlim = c(-4,4), ylab = "density", xlab = "t", xaxt="n")
hist(rt(1000, 10),
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dnorm(x), xlim = c(-4,4), lwd =3)
curve(dt(x, df = 10), main = "Students T denisty with 10 df",
xlim = c(-4,4), ylab = "density", xlab = "t", xaxt="n")
legend(x="topleft", legend = c("density", "CDF"),
lty = c(1,2), col = c(1,2),lwd=3, inset = 0.2)
rm(list = ls())
###########################################
# Day 8: Data Management II
# Reading:5.1 - 5.3
# https://cran.r-project.org/doc/contrib/Short-refcard.pdf
# Objectives:
#  1. Numerical functions
#  2. Character functions
#  3. Apply functions
###########################################
#
###########################
# Motivating Data
###########################
Student <- c("John Davis", "Angela Williams", "Bullwinkle Moose",
"David Jones", "Janice Markhammer", "Cheryl Cushing",
"Reuven Ytzrhak", "Greg Knox", "Joel England",
"Mary Rayburn")
Math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
Science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
roster <- data.frame(Student, Math, Science, English,
stringsAsFactors=FALSE)
roster
#
#
###########################
# Numerical Functions
###########################
#
# Notes:
#  - See https://cran.r-project.org/doc/contrib/Short-refcard.pdf
#  - Mathematical functions: abs,sqrt,ceiling, floor, trunc, round, signif
#    cos, sin, tan, log, exp
#  - Statistical functions: mean, median, sd, mad, quantile, range, sum,
#    min, max, scale
#  - Probability functions: (quantile,probability, random number, density)
#    dnorm,rnorm,qnorm,pnorm,
#    dbinom,rbinom,pbinom,qbinom,
#    rf,df,pf,qf,
#    rt,dt,pt,qt,
#    runif,dunif,punif,qunif... (see url)
#
# Example: see url above for more.  Just try them out and read help file.
args(pt)
help(pt)
args(rbinom)
help(rbinom)
args(dnorm)
help(dnorm)
options(digits=2)
runif(10)
runif(10)
set.seed(1)
runif(10)
set.seed(1)
runif(10)
help(curve)
curve(dunif(x), xlim = c(-.1,1.1), lwd =3, ylab = "",
main="Uniform distribution")
curve(punif(x), lwd = 3, lty =2, col =2, add = T)
legend(x="topleft", legend = c("density", "CDF"),
lty = c(1,2), col = c(1,2),lwd=3, inset = 0.2)
punif(.7)
dunif(.7)
punif(-.2)
dunif(1.2)
curve(dt(x, df = 10), main = "Students T denisty with 10 df",
xlim = c(-4,4), ylab = "density", xlab = "t", xaxt="n")
qt(c(.025,.975),10)
pt(-2.2,10)
axis(side =1, cex =2, at=qt(c(.025,.975), df =10),
labels = c(expression(t[.025]),expression(t[.975])))
t.data<-rt(1000,10)
hist(t.data, probability=T)
curve(dt(x, df = 10), main = "Students T denisty with 10 df",
xlim = c(-4,4), ylab = "density", xlab = "t", xaxt="n", add= T)
mean(t.data<2.228)
pt(2.228,df=10)
plot(pbinom(0:20, size =20, p=.5), type = "s",
main="CDF of binomial", sub="n=20, p=0.5", ylab="F(x)",xlab="x")
curve(dt(x, df = 10), main = "Students T denisty with 10 df",
xlim = c(-4,4), ylab = "density", xlab = "t", xaxt="n")
qt(c(.025,.975),10)
pt(-2.2,10)
axis(side =1, cex =2, at=qt(c(.025,.975), df =10),
labels = c(expression(t[.025]),expression(t[.975])))
t.data<-rt(1000,10)
hist(t.data, probability=T)
curve(dt(x, df = 10), main = "Students T denisty with 10 df",
xlim = c(-4,4), ylab = "density", xlab = "t", xaxt="n", add= T)
mean(t.data<2.228)
pt(2.228,df=10)
pt(2.228,df=10)
curve(dt(x, df = 10), main = "Students T denisty with 10 df",
xlim = c(-4,4), ylab = "density", xlab = "t", xaxt="n")
qt(c(.025,.975),10)
pt(-2.2,10)
axis(side =1, cex =2, at=qt(c(.025,.975), df =10),
labels = c(expression(t[.025]),expression(t[.975])))
t.data<-rt(1000,10)
hist(t.data, probability=T)
curve(dt(x, df = 10), main = "Students T denisty with 10 df",
xlim = c(-4,4), ylab = "density", xlab = "t", xaxt="n", add= T)
hist(t.data, probability=T)
curve(dt(x, df = 10), main = "Students T denisty with 10 df",
xlim = c(-4,4), ylab = "density", xlab = "t", xaxt="n", add= T)
?dt
t_data <- rt(1000,10)
hist(t_data,
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dt(x, df = 10), xlim = c(-4,4), add= T)
t_data <- rt(1000,10)
hist(t_data,
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dt(x, df = 10), xlim = c(-4,4), add= T)
curve(dnorm(x), xlim = c(-4,4), add= T)
t_data <- rt(1000,10)
hist(t_data,
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dt(x, df = 10),
xlim = c(-4,4),
lwd = 2,
add= T)
curve(dnorm(x), xlim = c(-4,4), add= T)
legend(x="topleft", legend = c("density", "CDF"),
lty = c(1,2), col = c(1,2),lwd=3, inset = 0.2)
t_data <- rt(1000,10)
hist(t_data,
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dt(x, df = 10),
xlim = c(-4,4),
lwd = 2,
lty = 2,
color = 'red',
add= T)
curve(dnorm(x), xlim = c(-4,4), add= T)
legend(x="topleft", legend = c("density", "CDF"),
lty = c(1,2), col = c(1,2),lwd=3, inset = 0.2)
t_data <- rt(1000,10)
hist(t_data,
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dt(x, df = 10),
xlim = c(-4,4),
lwd = 2,
lty = 2,
col = 'red',
add= T)
curve(dnorm(x), xlim = c(-4,4), add= T)
legend(x="topleft", legend = c("density", "CDF"),
lty = c(1,2), col = c(1,2),lwd=3, inset = 0.2)
t_data <- rt(1000,10)
hist(t_data,
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dt(x, df = 10),
xlim = c(-4,4),
lwd = 2,
lty = 2,
col = 'red',
add= T)
curve(dnorm(x), xlim = c(-4,4), add= T)
legend(x="topleft", legend = c("t distribution", "normal distribution"),
lty = c(1,2), col = c(1,2),lwd=3, inset = 0.2)
t_data <- rt(1000,10)
curve(dt(x, df = 10),
xlim = c(-4,4),
lwd = 2,
lty = 2,
col = 'red',
add= T)
curve(dnorm(x),
xlim = c(-4,4),
add= T)
legend(x="topleft",
legend = c("t distribution", "normal distribution"),
lty = c(2,1), col = c('red','black'),lwd=c(2,1))
hist(t_data,
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
t_data <- rt(1000,10)
hist(t_data,
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dt(x, df = 10),
xlim = c(-4,4),
lwd = 2,
lty = 2,
col = 'red',
add= T)
curve(dnorm(x),
xlim = c(-4,4),
add= T)
legend(x="topleft",
legend = c("t distribution", "normal distribution"),
lty = c(2,1), col = c('red','black'),lwd=c(2,1))
t_data <- rt(1000,10)
hist(t_data,
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dt(x, df = 10),
xlim = c(-4,4),
lwd = 2,
lty = 2,
col = 'red',
add= T)
curve(dnorm(x),
xlim = c(-4,4),
add= T)
legend(x="topleft",
legend = c("t distribution", "normal distribution"),
lty = c(2,1), col = c('red','black'),lwd=c(2,1)
inset = 0.05)
t_data <- rt(1000,10)
hist(t_data,
main = "Normal Approximation",
ylab = "Number of Occurances",
xlab = "T value",
probability = T)
curve(dt(x, df = 10),
xlim = c(-4,4),
lwd = 2,
lty = 2,
col = 'red',
add= T)
curve(dnorm(x),
xlim = c(-4,4),
add= T)
legend(x="topleft",
legend = c("t distribution", "normal distribution"),
lty = c(2,1), col = c('red','black'),lwd=c(2,1),
inset = 0.05)
rbinom(100, 10000, 0.05)
rbinom(10000, 100, 0.05)
hist(rbinom(10000, 100, 0.05))
hist(rbinom(100, 10000, 0.05))
hist(rbinom(10000, 100, 0.05))
hist(rbinom(10000, 100, 0.05), probability = T)
hist(rbinom(10000, 100, 0.05), probability = T)
hist(rbinom(10000, 100, 0.05),
probability = T,
main = 'Binomial(100, .05)'
)
hist(rbinom(10000, 100, 0.05),
probability = T,
main = 'Binomial(100, .05)',
xlab = 'result'
)
hist(rbinom(10000, 100, 0.05),
probability = T,
main = 'Binomial(100, .05)',
xlab = 'Result'
)
?dnorm
dnorm(x, 100*0.5, sqrt(100*0.5(0.95)))
curve(dnorm(x, 100*0.5, sqrt(100*0.5(0.95))), add = T)
hist(rbinom(10000, 100, 0.05),
probability = T,
main = 'Binomial(100, .05)',
xlab = 'Result'
)
curve(dnorm(x, 100*0.5, sqrt(100*0.5(0.95))), add = T)
mu <- 100 * 0.05
sigma <- sqrt((100*0.05))*0.95)
sigma <- sqrt((100*0.05)*0.95)
curve(dnorm(x, mu, sigma, add = T)
hist(rbinom(10000, 100, 0.05),
hist(rbinom(10000, 100, 0.05),
probability = T,
main = 'Binomial(100, .05)',
xlab = 'Result'
)
mu <- 100 * 0.05
sigma <- sqrt((100*0.05)*0.95)
curve(dnorm(x, mu, sigma, add = T)
hist(rbinom(10000, 100, 0.05),
probability = T,
main = 'Binomial(100, .05)',
xlab = 'Result'
)
mu <- 100 * 0.05
sigma <- sqrt((100*0.05)*0.95)
curve(dnorm(x, mu, sigma, add = T))
hist(rbinom(10000, 100, 0.05),
probability = T,
main = 'Binomial(100, .05)',
xlab = 'Result'
)
mu <- 100 * 0.05
sigma <- sqrt((100*0.05)*0.95)
curve(dnorm(x, mu, sigma))
hist(rbinom(10000, 100, 0.05),
probability = T,
main = 'Binomial(100, .05)',
xlab = 'Result'
)
mu <- 100 * 0.05
sigma <- sqrt((100*0.05)*0.95)
curve(dnorm(x, mu, sigma), add = T)
hist(rbinom(10000, 100, 0.90),
probability = T,
main = 'Binomial(100, .10)',
xlab = 'Result'
)
mu <- 100 * 0.10
sigma <- sqrt((100*0.10)*0.90)
curve(dnorm(x, mu, sigma), add = T)
hist(rbinom(10000, 100, 0.05),
probability = T,
main = 'Binomial(100, .05)',
xlab = 'Result'
)
mu <- 100 * 0.05
sigma <- sqrt((100*0.05)*0.95)
curve(dnorm(x, mu, sigma), add = T)
hist(rbinom(10000, 100, 0.10),
probability = T,
main = 'Binomial(100, .10)',
xlab = 'Result'
)
mu <- 100 * 0.10
sigma <- sqrt((100*0.10)*0.90)
curve(dnorm(x, mu, sigma), add = T)
?ls()
y <- quantile(score, c(.75,.25))
y <- quantile(score, c(.75,.25))
help(source)
setwd("~/Documents/data_science/r_stat_5193/scripts")
source("Day8Script.R")
score
roster$score
"roster <- roster[order(Lastname,Firstname),]"
y <- quantile(score, c(.75,.25))
roster$`Easy Grade`[roster$score > y[1]] <- "A"
roster$`Easy Grade`[roster$score < y[1] & roster$score >= y[2]] <- "B"
roster$`Easy Grade`[roster$score < y[2]] <- "C"
roster
y <- quantile(Math, c(.75,.25))
y
roster$MathGrade[roster$Math > y[1]] <- "A"
roster$MathGrade[roster$Math < y[1] & roster$Math >= y[2]] <- "B"
roster$MathGrade[roster$Math < y[2]] <- "C"
roster
hist(rbinom(10000, 100, 0.10),
probability = T,
main = 'Binomial(100, .10)',
xlab = 'X'
)
mu <- 100 * 0.10
sigma <- sqrt((100*0.10)*0.90)
curve(dnorm(x, mu, sigma), add = T)
Kelsey == Good
Kelsey <- 1
Good <- 1
Kelsey == Good
Kelsey == Good
